{:path [], :nextjournal/value {:package :directory, :toc {:path [], :nextjournal/value [{:title "Comparing Integrant and DI for Dependency Injection in Clojure", :emoji nil, :path "#comparing-integrant-and-di-for-dependency-injection-in-clojure", :items [{:title "Assumptions", :emoji nil, :path "#assumptions", :items []} {:title "Code Examples", :emoji nil, :path "#code-examples", :items [{:title "Jetty Server", :emoji nil, :path "#jetty-server", :items [{:title "Using Integrant", :emoji nil, :path "#using-integrant", :items []} {:title "Using DI", :emoji nil, :path "#using-di", :items []}]} {:title "Routes", :emoji nil, :path "#routes", :items [{:title "Using Integrant", :emoji nil, :path "#using-integrant-2", :items []} {:title "Using DI", :emoji nil, :path "#using-di-2", :items []}]} {:title "Reitit", :emoji nil, :path "#reitit", :items [{:title "Using Integrant", :emoji nil, :path "#using-integrant-3", :items []} {:title "Using DI", :emoji nil, :path "#using-di-3", :items []}]} {:title "Handlers", :emoji nil, :path "#handlers", :items [{:title "Using Integrant", :emoji nil, :path "#using-integrant-4", :items []} {:title "Using DI", :emoji nil, :path "#using-di-4", :items []}]} {:title "System Initialization", :emoji nil, :path "#system-initialization", :items [{:title "Using Integrant", :emoji nil, :path "#using-integrant-5", :items []} {:title "Using DI", :emoji nil, :path "#using-di-5", :items []}]}]} {:title "Real Applications", :emoji nil, :path "#real-applications", :items [{:title "Handling Dependencies", :emoji nil, :path "#handling-dependencies", :items []}]} {:title "Subsystems", :emoji nil, :path "#subsystems", :items [{:title "Using DI to Extend Routes", :emoji nil, :path "#using-di-to-extend-routes", :items []}]} {:title "Feature Flags", :emoji nil, :path "#feature-flags", :items []} {:title "Error Handling", :emoji nil, :path "#error-handling", :items []} {:title "Aspect-Oriented Programming (AOP)", :emoji nil, :path "#aspect-oriented-programming-(aop)", :items []}]}], :nextjournal/render-opts {:toc-visibility true, :set-hash? true}, :nextjournal/viewer {:name nextjournal.clerk.viewer/toc-viewer, :render-fn #viewer-fn nextjournal.clerk.render.navbar/render-items, :hash "5dtesrAmYqLZQQHSMEfFTNpmLtY4nC"}}, :sidenotes? false, :toc-visibility true, :atom-var-name->state #viewer-eval (nextjournal.clerk.render/intern-atoms! {}), :ns #viewer-eval (ns integrant), :file "notebooks/integrant.clj", :scope integrant, :header {:path [], :nextjournal/value [:div.viewer.w-full.max-w-prose.px-8.not-prose.mt-3 [:div.mb-8.text-xs.sans-serif.text-slate-400 nil [:<> [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "./../../"} "Index"] [:span.mx-2 "â€¢"]] [:span "Generated with " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://clerk.vision"} "Clerk"] [:<> " from " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href nil} "notebooks/integrant.clj" nil]]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}, :open-graph {:type "article:clerk", :title "Comparing Integrant and DI for Dependency Injection in Clojure", :description "This article compares two approaches to dependency injection in Clojure: Integrant and DI. We'll explore their differences through code examples and discuss the pros and cons of each approach."}, :title "Comparing Integrant and DI for Dependency Injection in Clojure", :blocks [{:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "user/markdown-5duLzLee7gFasDas4UwDg63puo9fYp"} ["h1" {:id "comparing-integrant-and-di-for-dependency-injection-in-clojure"} [:<> "Comparing Integrant and DI for Dependency Injection in Clojure"]] [:p [:<> "This article compares two approaches to dependency injection in Clojure: "] [:a {:href "https://github.com/weavejester/integrant"} [:<> "Integrant"]] [:<> " and "] [:a {:href "https://github.com/darkleaf/di"} [:<> "DI"]] [:<> "."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "We'll explore their differences through code examples and discuss the pros and cons of each approach."]]], :nextjournal/render-opts {:id "user/markdown-5duLzLee7gFasDas4UwDg63puo9fYp"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(ns integrant\n  {:nextjournal.clerk/toc true}\n  (:require\n   [integrant.core :as ig]\n   [darkleaf.di.core :as di]))", :nextjournal/render-opts {:loc {:line 6, :end-line 10, :column 1, :end-column 31}, :id "integrant/anon-expr-5dt4aDuMKjSPSmcXGcKY9LLWr848FU-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "integrant/markdown-5drfqLv1BxULcxi9cF7e6bonnCcMEk"} ["h2" {:id "assumptions"} [:<> "Assumptions"]] [:ul [:li [:<> [:<> "All code is written in a single file."]]] [:li [:<> [:<> "Short namespaces like "] [:code [:<> ":jetty/server"]] [:<> " are used instead of "] [:code [:<> "::jetty/server"]] [:<> "."]]] [:li [:<> [:<> "Real dependencies are omitted for brevity. For a complete example, see "] [:a {:href "https://github.com/darkleaf/di/tree/master/example"} [:<> "the example app"]] [:<> "."]]]] ["h2" {:id "code-examples"} [:<> "Code Examples"]] [:p [:<> "First, we'll define a fake generic "] [:code [:<> "stop"]] [:<> " function to simulate stopping a component:"]]], :nextjournal/render-opts {:id "integrant/markdown-5drfqLv1BxULcxi9cF7e6bonnCcMEk"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn stop\n  \"Fake generic stop function\"\n  [x]\n  ;; Placeholder for actual stop logic\n  ,)", :nextjournal/render-opts {:loc {:line 24, :end-line 28, :column 1, :end-column 5}, :id "integrant/stop-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "integrant/markdown-5drTcd5dRtzbBsgs4QQacXUy5P9Qg1"} ["h3" {:id "jetty-server"} [:<> "Jetty Server"]] ["h4" {:id "using-integrant"} [:<> "Using Integrant"]]], :nextjournal/render-opts {:id "integrant/markdown-5drTcd5dRtzbBsgs4QQacXUy5P9Qg1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defmethod ig/init-key :jetty/server [_ {:keys [handler port]}]\n  ;; In a real application, you might use:\n  ;; (jetty/run-jetty handler {:port port, :join? false})\n  [:jetty handler port])", :nextjournal/render-opts {:loc {:line 34, :end-line 37, :column 1, :end-column 25}, :id "integrant/anon-expr-5dtAcrEjgL9F76c9v5LaDKVX5VknPr-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defmethod ig/halt-key! :jetty/server [_ server]\n  (stop server))", :nextjournal/render-opts {:loc {:line 39, :end-line 40, :column 1, :end-column 17}, :id "integrant/anon-expr-5dtpkm9GTgjYtJsWo9LyKZ733ViiRB-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "integrant/markdown-5drxxjkb68ZvUnszS6yYkfcykthPV6"} ["h4" {:id "using-di"} [:<> "Using DI"]]], :nextjournal/render-opts {:id "integrant/markdown-5drxxjkb68ZvUnszS6yYkfcykthPV6"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn jetty-server\n  {::di/stop #(stop %)}\n  [{handler :jetty/handler\n    port    \"PORT\"}]\n  [:jetty handler port])", :nextjournal/render-opts {:loc {:line 44, :end-line 48, :column 1, :end-column 25}, :id "integrant/jetty-server-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "integrant/markdown-5drP4jyrTGwtam6Co48McFzBzxKK1i"} [:p [:<> "With DI:"]] [:ul [:li [:<> [:<> "Use "] [:strong [:<> "symbols"]] [:<> " for var names."]]] [:li [:<> [:<> "Use "] [:strong [:<> "keywords"]] [:<> " for abstract dependencies to define them later."]]] [:li [:<> [:<> "Use "] [:strong [:<> "strings"]] [:<> " for environment variables."]]]] ["h3" {:id "routes"} [:<> "Routes"]] ["h4" {:id "using-integrant-2"} [:<> "Using Integrant"]]], :nextjournal/render-opts {:id "integrant/markdown-5drP4jyrTGwtam6Co48McFzBzxKK1i"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defmethod ig/init-key :web/route-data [_ {:keys [root-handler]}]\n  [[\"/\" {:get {:handler root-handler}}]])", :nextjournal/render-opts {:loc {:line 60, :end-line 61, :column 1, :end-column 42}, :id "integrant/anon-expr-5ds2jmcyD5xLLm6FqEby9QPqoxeWZ7-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "integrant/markdown-5dsDUQreycGf3oAw9L9hCRpXzMw5CT"} ["h4" {:id "using-di-2"} [:<> "Using DI"]]], :nextjournal/render-opts {:id "integrant/markdown-5dsDUQreycGf3oAw9L9hCRpXzMw5CT"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def route-data\n  (di/template\n   [[\"/\" {:get {:handler (di/ref `root-handler)}}]]))", :nextjournal/render-opts {:loc {:line 65, :end-line 67, :column 1, :end-column 54}, :id "integrant/route-data-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "integrant/markdown-5duD95qetrcyMo9zN3mikXNaFiJ1ws"} [:p [:<> "Here, "] [:code [:<> "(di/ref `root-handler)"]] [:<> " resolves to the "] [:code [:<> "root-handler"]] [:<> " var."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "There's no need to define "] [:code [:<> "root-handler"]] [:<> " as a component in the system config."]] ["h3" {:id "reitit"} [:<> "Reitit"]] [:p [:<> "We need to transform "] [:code [:<> "route-data"]] [:<> " into a Ring handler."]]], :nextjournal/render-opts {:id "integrant/markdown-5duD95qetrcyMo9zN3mikXNaFiJ1ws"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn route-data->handler [route-data]\n  ;; In a real application, you might use:\n  ;; (-> route-data\n  ;;     (ring/router)\n  ;;     (ring/ring-handler))\n  [:ring-handler route-data])", :nextjournal/render-opts {:loc {:line 76, :end-line 81, :column 1, :end-column 30}, :id "integrant/route-data->handler-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "integrant/markdown-5drbys36CrZ7iErXNoQC1gF1A4mNiU"} ["h4" {:id "using-integrant-3"} [:<> "Using Integrant"]]], :nextjournal/render-opts {:id "integrant/markdown-5drbys36CrZ7iErXNoQC1gF1A4mNiU"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defmethod ig/init-key :web/handler [_ {:keys [route-data]}]\n  (route-data->handler route-data))", :nextjournal/render-opts {:loc {:line 85, :end-line 86, :column 1, :end-column 36}, :id "integrant/anon-expr-5dsSNMkRjFV3qehf66hSF1SrXuW8gZ-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "integrant/markdown-5drrfqYraX45GshDqg8tNoknsxqvez"} ["h4" {:id "using-di-3"} [:<> "Using DI"]]], :nextjournal/render-opts {:id "integrant/markdown-5drrfqYraX45GshDqg8tNoknsxqvez"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def web-handler (di/derive `route-data route-data->handler))", :nextjournal/render-opts {:loc {:line 90, :end-line 90, :column 1, :end-column 62}, :id "integrant/web-handler-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "integrant/markdown-5dtvoauhj9kmrWjkf22TtAmHs7AinH"} [:p [:<> "Alternatively:"]] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:div.code-viewer.code-listing [#viewer-eval nextjournal.clerk.render/inspect-presented {:path [0], :nextjournal/value "(defn web-handler [{route-data `route-data}]\n  (route-data->handler route-data))", :nextjournal/render-opts {:language "clojure"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code, :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:p [:<> "Or:"]] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:div.code-viewer.code-listing [#viewer-eval nextjournal.clerk.render/inspect-presented {:path [0], :nextjournal/value "(defn web-handler [{:syms [route-data]}]\n  (route-data->handler route-data))", :nextjournal/render-opts {:language "clojure"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code, :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] ["h3" {:id "handlers"} [:<> "Handlers"]] ["h4" {:id "using-integrant-4"} [:<> "Using Integrant"]]], :nextjournal/render-opts {:id "integrant/markdown-5dtvoauhj9kmrWjkf22TtAmHs7AinH"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defmethod ig/init-key :web/root-handler [_ {:keys []}]\n  (fn [req]\n    :ok))", :nextjournal/render-opts {:loc {:line 110, :end-line 112, :column 1, :end-column 10}, :id "integrant/anon-expr-5dt3JATxDP6vWSfjHC4pW5UCemUWiq-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "integrant/markdown-5drhB9ZRGZurVFQUXwbVxJFuLFQx1m"} ["h4" {:id "using-di-4"} [:<> "Using DI"]]], :nextjournal/render-opts {:id "integrant/markdown-5drhB9ZRGZurVFQUXwbVxJFuLFQx1m"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn root-handler [-deps req]\n  :ok)", :nextjournal/render-opts {:loc {:line 116, :end-line 117, :column 1, :end-column 7}, :id "integrant/root-handler-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "integrant/markdown-5dtsHHn8CS83a7SMAJgha9YCDeW75y"} [:p [:<> "With DI, you don't need to restart the system while developing "] [:code [:<> "root-handler"]] [:<> "."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "Just re-evaluate the "] [:code [:<> "defn"]] [:<> " form."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "With Integrant, you'd need to use "] [:code [:<> "ig/suspend-key!"]] [:<> " and "] [:code [:<> "ig/resume-key"]] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "to preserve the system state."]] ["h3" {:id "system-initialization"} [:<> "System Initialization"]] ["h4" {:id "using-integrant-5"} [:<> "Using Integrant"]]], :nextjournal/render-opts {:id "integrant/markdown-5dtsHHn8CS83a7SMAJgha9YCDeW75y"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def ig-config\n  {:jetty/server     {:port    8080\n                      :handler (ig/ref :web/handler)}\n   :web/route-data   {:root-handler (ig/ref :web/root-handler)}\n   :web/handler      {:route-data (ig/ref :web/route-data)}\n   :web/root-handler {}})", :nextjournal/render-opts {:loc {:line 128, :end-line 133, :column 1, :end-column 26}, :id "integrant/ig-config-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(ig/init ig-config)", :nextjournal/render-opts {:loc {:line 135, :end-line 135, :column 1, :end-column 20}, :id "integrant/anon-expr-5dshUF7zyyzwRdYdrhYEjxj2vx5uoc-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "integrant/markdown-5dtTYvAPDCSahy1M1mzfyarrW91LhP"} ["h4" {:id "using-di-5"} [:<> "Using DI"]]], :nextjournal/render-opts {:id "integrant/markdown-5dtTYvAPDCSahy1M1mzfyarrW91LhP"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(di/start `jetty-server {\"PORT\"         8080\n                         :jetty/handler (di/ref `web-handler)})", :nextjournal/render-opts {:loc {:line 140, :end-line 141, :column 1, :end-column 64}, :id "integrant/anon-expr-5dsucvgan1iWY7mSVZGnU15pdj2iGT-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "integrant/markdown-5drccCkztPnCpKFonmEmKjbPXCP9N4"} [:p [:<> "In DI:"]] [:ul [:li [:<> [:code [:<> ":jetty/handler"]] [:<> " is an abstraction."]]] [:li [:<> [:<> "You don't need to depend on a concrete key in the namespace with"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "the Jetty component."]]] [:li [:<> [:<> "Only declare abstract dependencies in the registry."]]] [:li [:<> [:<> "The registry allows you to override any key."]]]] ["h2" {:id "real-applications"} [:<> "Real Applications"]] [:p [:<> "In a real application, you might have multiple databases and layers."]] [:blockquote [:p [:<> "The vassal of my vassal is not my vassal."]]] [:p [:<> "Components should declare their dependencies themselves."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "For example, a handler depends on a database connection and an auth token decoder,"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "and the decoder depends on a secret key from an environment variable."]] ["h3" {:id "handling-dependencies"} [:<> "Handling Dependencies"]] [:p [:<> "With Integrant or Component, you have options for linking handlers and stateful components:"]] [:ol [:li [:<> [:strong [:<> "Make every stateless handler a component."]]]]] [:ul [:li [:<> [:<> "Results in a lot of configuration."]]]] [:ol [:li [:<> [:strong [:<> "Pass stateful components via the Ring request."]]]]] [:ul [:li [:<> [:a {:href "https://github.com/prestancedesign/usermanager-reitit-example/blob/main/src/usermanager/controllers/user.clj#L73"} [:<> "Example"]] [:<> "."]]]] [:p [:<> "With DI, you can define dependencies directly:"]]], :nextjournal/render-opts {:id "integrant/markdown-5drccCkztPnCpKFonmEmKjbPXCP9N4"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn root-handler* [{db      :db/datasource\n                      decoder `token-decoder}\n                     req]\n  :ok)", :nextjournal/render-opts {:loc {:line 172, :end-line 175, :column 1, :end-column 7}, :id "integrant/root-handler*-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn token-decoder [{key \"SECRET_KEY\"} token]\n  :decoded)", :nextjournal/render-opts {:loc {:line 177, :end-line 178, :column 1, :end-column 12}, :id "integrant/token-decoder-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "integrant/markdown-5drdn91KTqUrwmxpKnMqBUz3hTKpWp"} [:p [:<> "This allows you to define as many stateless components as needed,"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "which is the main goal of DI."]] ["h2" {:id "subsystems"} [:<> "Subsystems"]] [:p [:<> "In a web application with independent subsystems"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "(e.g., "] [:code [:<> "/subsystem-a"]] [:<> ", "] [:code [:<> "/subsystem-b"]] [:<> "),"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "each subsystem has its own "] [:code [:<> "route-data"]] [:<> " and uses common components."]] ["h3" {:id "using-di-to-extend-routes"} [:<> "Using DI to Extend Routes"]] [:p [:<> "With "] [:code [:<> "di/update-key"]] [:<> ","] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "you can extend base route-data with specific one in each subsystem."]]], :nextjournal/render-opts {:id "integrant/markdown-5drdn91KTqUrwmxpKnMqBUz3hTKpWp"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def subsystem-a-route-data\n  [[\"/subsystem-a/\" '...]])", :nextjournal/render-opts {:loc {:line 194, :end-line 195, :column 1, :end-column 28}, :id "integrant/subsystem-a-route-data-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn subsystem-a []\n  (di/update-key `route-data concat (di/ref `subsystem-a-route-data)))", :nextjournal/render-opts {:loc {:line 197, :end-line 198, :column 1, :end-column 71}, :id "integrant/subsystem-a-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "integrant/markdown-5dryrfMA8ofYbqY87rq9Kv8ExdgMit"} [:p [:<> "Starting the system:"]]], :nextjournal/render-opts {:id "integrant/markdown-5dryrfMA8ofYbqY87rq9Kv8ExdgMit"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(di/start `jetty-server\n          {\"PORT\"         8080\n           :jetty/handler (di/ref `web-handler)}\n          (subsystem-a)\n          #_(subsystem-N))", :nextjournal/render-opts {:loc {:line 202, :end-line 206, :column 1, :end-column 27}, :id "integrant/anon-expr-5drmMxJFT76YooaPjNwPATjWqCBZ2d-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "integrant/markdown-5drzf7hZSrPCeJgr82t9TSRDvENnCu"} ["h2" {:id "feature-flags"} [:<> "Feature Flags"]] [:p [:<> "In most cases I prefer to use feature flags instead of branching."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "It can be implemented easily with DI:"]]], :nextjournal/render-opts {:id "integrant/markdown-5drzf7hZSrPCeJgr82t9TSRDvENnCu"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn subsystem-a* [{:keys [subsystem-a-enabled]}]\n  (when subsystem-a-enabled\n    (di/update-key `route-data concat (di/ref `subsystem-a-route-data))))", :nextjournal/render-opts {:loc {:line 213, :end-line 215, :column 1, :end-column 74}, :id "integrant/subsystem-a*-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn registry [flags]\n  [{\"PORT\"         8080\n    :jetty/handler (di/ref `web-handler)}\n   (subsystem-a* flags)\n   #_(subsystem-N flags)])", :nextjournal/render-opts {:loc {:line 217, :end-line 221, :column 1, :end-column 27}, :id "integrant/registry-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(di/start `jetty-server (registry {:subsystem-a-enabled true}))", :nextjournal/render-opts {:loc {:line 223, :end-line 223, :column 1, :end-column 64}, :id "integrant/anon-expr-5dtW9PynrQPhwV5Dscvo6ybidqexd3-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "integrant/markdown-5droSbQJhD9WqX3BBQpLejxonhCo2b"} ["h2" {:id "error-handling"} [:<> "Error Handling"]] [:p [:<> "Both Integrant and Component can hinder REPL development"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "if "] [:code [:<> "ig/init-key"]] [:<> " throws an exception."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "For example, if the Jetty server starts and listens on a port"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "but initialization fails, you might need to restart the REPL."]] [:p [:<> "DI is smart enough to stop already started components in such cases."]] [:p [:em [:<> "Note"]] [:<> ": You can use "] [:a {:href "https://github.com/weavejester/integrant-repl"} [:<> "integrant-repl"]] [:<> ", which handles this scenario by "] [:a {:href "https://github.com/weavejester/integrant-repl/blob/master/src/integrant/repl.clj#L22"} [:<> "stopping components on failure"]] [:<> "."]] ["h2" {:id "aspect-oriented-programming-(aop)"} [:<> "Aspect-Oriented Programming (AOP)"]] [:p [:<> "While AOP can be a dangerous practice,"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "sometimes you need to add extra behavior to existing components"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "(e.g., logging, performance measurement, spec checking)."]] [:p [:<> "With Integrant, there's no convenient way to update an existing component."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "You'd need to "] [:a {:href "https://github.com/weavejester/integrant/issues/58"} [:<> "rename the component key"]] [:<> " and reconfigure dependent components."]] [:p [:<> "With DI, you can use "] [:code [:<> "di/update-key"]] [:<> " and "] [:code [:<> "di/instrument"]] [:<> " to modify components."]] [:hr] [:p [:<> "This comparison highlights how DI provides a flexible and dynamic approach"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "to dependency injection in Clojure,"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "especially in terms of REPL-driven development and managing complex dependencies."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "Integrant, while powerful, may require more boilerplate during development."]]], :nextjournal/render-opts {:id "integrant/markdown-5droSbQJhD9WqX3BBQpLejxonhCo2b"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}}]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/notebook-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-notebook, :hash "5duAFDxE4sCnRX71Wo6zeCpC9C3djE"}}