{:path [], :nextjournal/value {:package :directory, :toc {:path [], :nextjournal/value [], :nextjournal/render-opts {:toc-visibility false, :set-hash? true}, :nextjournal/viewer {:name nextjournal.clerk.viewer/toc-viewer, :render-fn #viewer-fn nextjournal.clerk.render.navbar/render-items, :hash "5dtesrAmYqLZQQHSMEfFTNpmLtY4nC"}}, :sidenotes? false, :toc-visibility false, :atom-var-name->state #viewer-eval (nextjournal.clerk.render/intern-atoms! {}), :ns #viewer-eval (ns darkleaf.di.tutorial.x-inspect-test), :file "test/darkleaf/di/tutorial/x_inspect_test.clj", :scope darkleaf.di.tutorial.x-inspect-test, :header {:path [], :nextjournal/value [:div.viewer.w-full.max-w-prose.px-8.not-prose.mt-3 [:div.mb-8.text-xs.sans-serif.text-slate-400 nil [:<> [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "./../../../../../"} "Index"] [:span.mx-2 "â€¢"]] [:span "Generated with " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://clerk.vision"} "Clerk"] [:<> " from " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href nil} "test/darkleaf/di/tutorial/x_inspect_test.clj" nil]]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}, :open-graph {:type "article:clerk", :title nil, :description nil}, :blocks [{:path [], :nextjournal/value [{:path [0], :nextjournal/value "(ns darkleaf.di.tutorial.x-inspect-test\n  (:require\n   [clojure.test :as t]\n   [darkleaf.di.core :as di]\n   [darkleaf.di.protocols :as p]\n   [darkleaf.di.tutorial.x-ns-publics-test :as x-ns-publics-test]))", :nextjournal/render-opts {:loc {:line 1, :end-line 6, :column 1, :end-column 68}, :id "darkleaf.di.tutorial.x-inspect-test/anon-expr-5dquxToDEU1Acm5wfWXtWsedFsSfgE-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest env-test\n  (t/is (= [{:key         \"FOO\"\n             :description {::di/kind :env\n                           ::di/root true}}]\n           (di/inspect \"FOO\"))))", :nextjournal/render-opts {:loc {:line 8, :end-line 12, :column 1, :end-column 33}, :id "darkleaf.di.tutorial.x-inspect-test/env-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$env_test 0x51dfa3c5 \"darkleaf.di.tutorial.x_inspect_test$env_test@51dfa3c5\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/env-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/env-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest fixed-env-test\n  (t/is (= [{:key         \"FOO\"\n             :description {::di/kind :trivial\n                           :object   \"value\"\n                           ::di/root true}}]\n           (di/inspect \"FOO\" {\"FOO\" \"value\"}))))", :nextjournal/render-opts {:loc {:line 15, :end-line 20, :column 1, :end-column 49}, :id "darkleaf.di.tutorial.x-inspect-test/fixed-env-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$fixed_env_test 0x283d515e \"darkleaf.di.tutorial.x_inspect_test$fixed_env_test@283d515e\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/fixed-env-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/fixed-env-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def variable :obj)", :nextjournal/render-opts {:loc {:line 23, :end-line 23, :column 1, :end-column 20}, :id "darkleaf.di.tutorial.x-inspect-test/variable-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value :obj, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/variable-result-1"}}, :nextjournal/blob-id "5du9ZH9QkgwVYkx2gQbCaaeFZ6zVbs"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/variable-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest variable-test\n  (t/is (= [{:key         `variable\n             :description {::di/kind     :trivial\n                           :object       :obj\n                           ::di/root     true\n                           ::di/variable #'variable}}]\n           (di/inspect `variable))))", :nextjournal/render-opts {:loc {:line 25, :end-line 31, :column 1, :end-column 37}, :id "darkleaf.di.tutorial.x-inspect-test/variable-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$variable_test 0x734485a8 \"darkleaf.di.tutorial.x_inspect_test$variable_test@734485a8\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/variable-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/variable-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def variable+factory\n  (reify p/Factory\n    (dependencies [_])\n    (build [_ _ _] :ok)\n    (description [_] {})))", :nextjournal/render-opts {:loc {:line 34, :end-line 38, :column 1, :end-column 27}, :id "darkleaf.di.tutorial.x-inspect-test/variable+factory-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$reify__22515 0x79ff741f \"darkleaf.di.tutorial.x_inspect_test$reify__22515@79ff741f\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/variable+factory-result-1"}}, :nextjournal/blob-id "5drGV4WM6SsJ38Ff8ndZvwCkKjJnWZ"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/variable+factory-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest variable+factory-test\n  (t/is (= [{:key         `variable+factory\n             :description {::di/root     true\n                           ::di/variable #'variable+factory}}]\n           (di/inspect `variable+factory))))", :nextjournal/render-opts {:loc {:line 40, :end-line 44, :column 1, :end-column 45}, :id "darkleaf.di.tutorial.x-inspect-test/variable+factory-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$variable_PLUS_factory_test 0x5512216e \"darkleaf.di.tutorial.x_inspect_test$variable_PLUS_factory_test@5512216e\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/variable+factory-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/variable+factory-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def variable+description\n  (reify p/Factory\n    (dependencies [_])\n    (build [_ _ _] :ok)\n    (description [_]\n      {::di/kind ::variable+description})))", :nextjournal/render-opts {:loc {:line 47, :end-line 52, :column 1, :end-column 44}, :id "darkleaf.di.tutorial.x-inspect-test/variable+description-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$reify__22522 0x17672d33 \"darkleaf.di.tutorial.x_inspect_test$reify__22522@17672d33\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/variable+description-result-1"}}, :nextjournal/blob-id "5dtofb9TS5UkqMhZtZrr5D6YHZYuo6"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/variable+description-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest variable+description-test\n  (t/is (= [{:key         `variable+description\n             :description {::di/kind     ::variable+description\n                           ::di/root     true\n                           ::di/variable #'variable+description}}]\n           (di/inspect `variable+description))))", :nextjournal/render-opts {:loc {:line 54, :end-line 59, :column 1, :end-column 49}, :id "darkleaf.di.tutorial.x-inspect-test/variable+description-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$variable_PLUS_description_test 0x40d983b2 \"darkleaf.di.tutorial.x_inspect_test$variable_PLUS_description_test@40d983b2\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/variable+description-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/variable+description-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def variable+template\n  (di/template [42]))", :nextjournal/render-opts {:loc {:line 62, :end-line 63, :column 1, :end-column 22}, :id "darkleaf.di.tutorial.x-inspect-test/variable+template-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#darkleaf.di.core/template [42]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/variable+template-result-1"}}, :nextjournal/blob-id "5dtHCW5ssugq7CK55tpkkEpDeAcfwr"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/variable+template-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest variable+template-test\n  (t/is (= [{:key         `variable+template\n             :description {::di/kind     :template\n                           :template     [42]\n                           ::di/root     true\n                           ::di/variable #'variable+template}}]\n           (di/inspect `variable+template))))", :nextjournal/render-opts {:loc {:line 65, :end-line 71, :column 1, :end-column 46}, :id "darkleaf.di.tutorial.x-inspect-test/variable+template-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$variable_PLUS_template_test 0x4284483a \"darkleaf.di.tutorial.x_inspect_test$variable_PLUS_template_test@4284483a\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/variable+template-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/variable+template-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn component-0-arity\n  {::di/kind :component}\n  []\n  :ok)", :nextjournal/render-opts {:loc {:line 74, :end-line 77, :column 1, :end-column 7}, :id "darkleaf.di.tutorial.x-inspect-test/component-0-arity-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$component_0_arity 0x6d91855 \"darkleaf.di.tutorial.x_inspect_test$component_0_arity@6d91855\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/component-0-arity-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/component-0-arity-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest component-0-arity-test\n  (t/is (= [{:key         `component-0-arity\n             :description {::di/kind     :component\n                           ::di/root     true\n                           ::di/variable #'component-0-arity}}]\n           (di/inspect `component-0-arity))))", :nextjournal/render-opts {:loc {:line 79, :end-line 84, :column 1, :end-column 46}, :id "darkleaf.di.tutorial.x-inspect-test/component-0-arity-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$component_0_arity_test 0x28f9b308 \"darkleaf.di.tutorial.x_inspect_test$component_0_arity_test@28f9b308\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/component-0-arity-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/component-0-arity-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn component-1-arity\n  {::di/kind :component}\n  [-deps]\n  :ok)", :nextjournal/render-opts {:loc {:line 87, :end-line 90, :column 1, :end-column 7}, :id "darkleaf.di.tutorial.x-inspect-test/component-1-arity-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$component_1_arity 0x243171b6 \"darkleaf.di.tutorial.x_inspect_test$component_1_arity@243171b6\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/component-1-arity-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/component-1-arity-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest component-1-arity-test\n  (t/is (= [{:key         `component-1-arity\n             :description {::di/kind     :component\n                           ::di/root     true\n                           ::di/variable #'component-1-arity}}]\n           (di/inspect `component-1-arity))))", :nextjournal/render-opts {:loc {:line 92, :end-line 97, :column 1, :end-column 46}, :id "darkleaf.di.tutorial.x-inspect-test/component-1-arity-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$component_1_arity_test 0x44143892 \"darkleaf.di.tutorial.x_inspect_test$component_1_arity_test@44143892\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/component-1-arity-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/component-1-arity-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn service-0-arity\n  {::di/kind :service}\n  []\n  :ok)", :nextjournal/render-opts {:loc {:line 100, :end-line 103, :column 1, :end-column 7}, :id "darkleaf.di.tutorial.x-inspect-test/service-0-arity-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$service_0_arity 0xa419bf5 \"darkleaf.di.tutorial.x_inspect_test$service_0_arity@a419bf5\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/service-0-arity-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/service-0-arity-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest service-0-arity-test\n  (t/is (= [{:key         `service-0-arity\n             :description {::di/kind     :service\n                           ::di/root     true\n                           ::di/variable #'service-0-arity}}]\n           (di/inspect `service-0-arity))))", :nextjournal/render-opts {:loc {:line 105, :end-line 110, :column 1, :end-column 44}, :id "darkleaf.di.tutorial.x-inspect-test/service-0-arity-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$service_0_arity_test 0x6f450846 \"darkleaf.di.tutorial.x_inspect_test$service_0_arity_test@6f450846\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/service-0-arity-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/service-0-arity-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn service-n-arity\n  {::di/kind :service}\n  [-deps]\n  :ok)", :nextjournal/render-opts {:loc {:line 113, :end-line 116, :column 1, :end-column 7}, :id "darkleaf.di.tutorial.x-inspect-test/service-n-arity-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$service_n_arity 0x40d678d9 \"darkleaf.di.tutorial.x_inspect_test$service_n_arity@40d678d9\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/service-n-arity-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/service-n-arity-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest service-n-arity-test\n  (t/is (= [{:key         `service-n-arity\n             :description {::di/kind     :service\n                           ::di/root     true\n                           ::di/variable #'service-n-arity}}]\n           (di/inspect `service-n-arity))))", :nextjournal/render-opts {:loc {:line 118, :end-line 123, :column 1, :end-column 44}, :id "darkleaf.di.tutorial.x-inspect-test/service-n-arity-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$service_n_arity_test 0x25e308f9 \"darkleaf.di.tutorial.x_inspect_test$service_n_arity_test@25e308f9\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/service-n-arity-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/service-n-arity-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defmulti multimethod-service\n  {::di/deps []}\n  (fn [-deps kind] kind))", :nextjournal/render-opts {:loc {:line 126, :end-line 128, :column 1, :end-column 26}, :id "darkleaf.di.tutorial.x-inspect-test/multimethod-service-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[clojure.lang.MultiFn 0x237bb183 \"clojure.lang.MultiFn@237bb183\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/multimethod-service-result-1"}}, :nextjournal/blob-id "5dt2GzSWoVkEn9ouzDvJB4qq21HH2T"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/multimethod-service-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest multimethod-service-test\n  (t/is (= [{:key         `multimethod-service\n             :description {::di/kind     :service\n                           ::di/root     true\n                           ::di/variable #'multimethod-service}}]\n           (di/inspect `multimethod-service))))", :nextjournal/render-opts {:loc {:line 130, :end-line 135, :column 1, :end-column 48}, :id "darkleaf.di.tutorial.x-inspect-test/multimethod-service-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$multimethod_service_test 0x643b9a92 \"darkleaf.di.tutorial.x_inspect_test$multimethod_service_test@643b9a92\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/multimethod-service-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/multimethod-service-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest ref-test\n  (t/is (= [{:key          `foo\n             :dependencies {`bar :required}\n             :description  {::di/kind :ref\n                            :key      `bar\n                            :type     :required\n                            ::di/root true}}\n            {:key         `bar\n             :description {::di/kind :undefined}}]\n           (di/inspect `foo {`foo (di/ref `bar)}))))", :nextjournal/render-opts {:loc {:line 138, :end-line 147, :column 1, :end-column 53}, :id "darkleaf.di.tutorial.x-inspect-test/ref-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$ref_test 0x17d8267c \"darkleaf.di.tutorial.x_inspect_test$ref_test@17d8267c\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/ref-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/ref-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest template-test\n  (t/is (= [{:key          `foo\n             :dependencies {`bar :required}\n             :description  {::di/kind :template\n                            :template [42 (di/ref `bar)]\n                            ::di/root true}}\n            {:key         `bar\n             :description {::di/kind :undefined}}]\n           (di/inspect `foo {`foo (di/template [42 (di/ref `bar)])}))))", :nextjournal/render-opts {:loc {:line 150, :end-line 158, :column 1, :end-column 72}, :id "darkleaf.di.tutorial.x-inspect-test/template-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$template_test 0x2ac140be \"darkleaf.di.tutorial.x_inspect_test$template_test@2ac140be\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/template-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/template-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest derive-test\n  (t/is (= [{:key          `foo\n             :dependencies {`bar :optional}\n             :description  {::di/kind :derive\n                            :key      `bar\n                            :f        str\n                            :args     [\"arg\"]\n                            ::di/root true}}\n            {:key         `bar\n             :description {::di/kind :undefined}}]\n           (di/inspect `foo {`foo (di/derive `bar str \"arg\")}))))", :nextjournal/render-opts {:loc {:line 161, :end-line 171, :column 1, :end-column 66}, :id "darkleaf.di.tutorial.x-inspect-test/derive-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$derive_test 0x54480bcc \"darkleaf.di.tutorial.x_inspect_test$derive_test@54480bcc\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/derive-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/derive-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest trivial-nil-test\n  (t/is (= [{:key         `foo\n             :description {::di/kind :trivial\n                           :object   nil\n                           ::di/root true}}]\n           (di/inspect `foo {`foo nil}))))", :nextjournal/render-opts {:loc {:line 174, :end-line 179, :column 1, :end-column 43}, :id "darkleaf.di.tutorial.x-inspect-test/trivial-nil-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$trivial_nil_test 0x6c9ff4dd \"darkleaf.di.tutorial.x_inspect_test$trivial_nil_test@6c9ff4dd\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/trivial-nil-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/trivial-nil-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest trivial-obj-test\n  (t/is (= [{:key         `foo\n             :description {::di/kind :trivial\n                           :object   str\n                           ::di/root true}}]\n           (di/inspect `foo {`foo str}))))", :nextjournal/render-opts {:loc {:line 182, :end-line 187, :column 1, :end-column 43}, :id "darkleaf.di.tutorial.x-inspect-test/trivial-obj-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$trivial_obj_test 0x3aa2c4f4 \"darkleaf.di.tutorial.x_inspect_test$trivial_obj_test@3aa2c4f4\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/trivial-obj-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/trivial-obj-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest update-key-test\n  (t/is (= [{:key          `a\n             :dependencies (seq {`b :required})\n             :description  {::di/kind :trivial\n                            :object   :obj\n                            ::di/root true\n                            ::di/update-key\n                            [[{::di/kind :trivial\n                               :object   str}\n                              {::di/kind :ref\n                               :key      `b\n                               :type     :required}]\n                             [{::di/kind :trivial\n                               :object   identity}]]}}\n            {:key         `b\n             :description {::di/kind :trivial\n                           :object   \"b\"}}]\n           (di/inspect `a\n                       {`a :obj\n                        `b \"b\"}\n                       (di/update-key `a str (di/ref `b))\n                       (di/update-key `a identity)))))", :nextjournal/render-opts {:loc {:line 190, :end-line 211, :column 1, :end-column 55}, :id "darkleaf.di.tutorial.x-inspect-test/update-key-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$update_key_test 0x1ac6b7ae \"darkleaf.di.tutorial.x_inspect_test$update_key_test@1ac6b7ae\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/update-key-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/update-key-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest add-side-dependency-test\n  (t/is (= [{:key         `a\n             :description {::di/kind :trivial\n                           :object   :obj\n                           ::di/root true}}\n            {:key         `side-dep-1\n             :description {::di/kind            :trivial\n                           :object              :side-dep\n                           ::di/side-dependency true}}\n            {:key         `side-dep-2\n             :description {::di/kind            :trivial\n                           :object              :side-dep\n                           ::di/side-dependency true}}]\n           (di/inspect `a\n                       {`a          :obj\n                        `side-dep-1 :side-dep\n                        `side-dep-2 :side-dep}\n                       (di/add-side-dependency `side-dep-1)\n                       (di/add-side-dependency `side-dep-2)))))", :nextjournal/render-opts {:loc {:line 214, :end-line 232, :column 1, :end-column 64}, :id "darkleaf.di.tutorial.x-inspect-test/add-side-dependency-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$add_side_dependency_test 0xe44d951 \"darkleaf.di.tutorial.x_inspect_test$add_side_dependency_test@e44d951\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/add-side-dependency-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/add-side-dependency-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest ns-publics-test\n  (t/is (= [{:key          :ns-publics/darkleaf.di.tutorial.x-ns-publics-test\n             :dependencies {`x-ns-publics-test/service   :required\n                            `x-ns-publics-test/component :required\n                            `x-ns-publics-test/ok-test   :required}\n             :description  {::di/kind   :middleware\n                            :middleware ::di/ns-publics\n                            :ns         'darkleaf.di.tutorial.x-ns-publics-test\n                            ::di/root   true}}\n            {:key          `x-ns-publics-test/service\n             :dependencies {`x-ns-publics-test/component :required}\n             :description  {::di/kind     :service\n                            ::di/variable #'x-ns-publics-test/service}}\n            {:key         `x-ns-publics-test/component\n             :description {::di/kind     :component\n                           ::di/variable #'x-ns-publics-test/component}}\n            {:key         `x-ns-publics-test/ok-test\n             :description {::di/kind     :trivial\n                           :object       x-ns-publics-test/ok-test\n                           ::di/variable #'x-ns-publics-test/ok-test}}]\n           (di/inspect :ns-publics/darkleaf.di.tutorial.x-ns-publics-test\n                       (di/ns-publics)))))", :nextjournal/render-opts {:loc {:line 235, :end-line 256, :column 1, :end-column 43}, :id "darkleaf.di.tutorial.x-inspect-test/ns-publics-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$ns_publics_test 0x1d6efd58 \"darkleaf.di.tutorial.x_inspect_test$ns_publics_test@1d6efd58\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/ns-publics-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/ns-publics-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest env-parsing-test\n  (t/is (= [{:key          :env.long/PORT\n             :dependencies {\"PORT\" :optional}\n             :description  {::di/kind   :middleware\n                            :middleware ::di/env-parsing\n                            :cmap       {:env.long parse-long}\n                            ::di/root   true}}\n            {:key         \"PORT\"\n             :description {::di/kind :trivial\n                           :object   \"8080\"}}]\n           (di/inspect :env.long/PORT\n                       (di/env-parsing :env.long parse-long)\n                       {\"PORT\" \"8080\"}))))", :nextjournal/render-opts {:loc {:line 259, :end-line 271, :column 1, :end-column 43}, :id "darkleaf.di.tutorial.x-inspect-test/env-parsing-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$env_parsing_test 0x31c71f65 \"darkleaf.di.tutorial.x_inspect_test$env_parsing_test@31c71f65\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/env-parsing-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/env-parsing-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest log-test\n  (t/is (= [{:key         `foo\n             :description {::di/kind :trivial\n                           :object   :obj\n                           ::di/log  {:will-be-logged true\n                                      #_#_:opts       nil}\n                           ::di/root true}}]\n           (di/inspect `foo\n                       {`foo :obj}\n                       (di/log)))))", :nextjournal/render-opts {:loc {:line 274, :end-line 283, :column 1, :end-column 36}, :id "darkleaf.di.tutorial.x-inspect-test/log-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$log_test 0x1e13a534 \"darkleaf.di.tutorial.x_inspect_test$log_test@1e13a534\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/log-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/log-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def variable-factory-regression\n  (reify p/Factory\n    (dependencies [_])\n    (build [_ _ _] :ok)\n    (description [_])))", :nextjournal/render-opts {:loc {:line 286, :end-line 290, :column 1, :end-column 24}, :id "darkleaf.di.tutorial.x-inspect-test/variable-factory-regression-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$reify__22619 0x36b569f6 \"darkleaf.di.tutorial.x_inspect_test$reify__22619@36b569f6\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/variable-factory-regression-result-1"}}, :nextjournal/blob-id "5dquAoUMFGvXNaf9SiuF5jogM877sU"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/variable-factory-regression-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest variable-factory-regression-test\n  (t/is (= :ok\n           @(di/start `variable-factory-regression))))", :nextjournal/render-opts {:loc {:line 292, :end-line 294, :column 1, :end-column 55}, :id "darkleaf.di.tutorial.x-inspect-test/variable-factory-regression-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$variable_factory_regression_test 0x5c5bc645 \"darkleaf.di.tutorial.x_inspect_test$variable_factory_regression_test@5c5bc645\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/variable-factory-regression-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/variable-factory-regression-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest vector-test\n  (t/is (= [{:key \"A\"\n             :description {::di/kind :env\n                           ::di/root true}}\n            {:key \"B\"\n             :description {::di/kind :env\n                           ::di/root true}}]\n           (di/inspect [\"A\" \"B\"]))))", :nextjournal/render-opts {:loc {:line 297, :end-line 304, :column 1, :end-column 37}, :id "darkleaf.di.tutorial.x-inspect-test/vector-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$vector_test 0x556ed69c \"darkleaf.di.tutorial.x_inspect_test$vector_test@556ed69c\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/vector-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/vector-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest map-test\n  (t/is (= [{:key         \"A\"\n             :description {::di/kind :env\n                           ::di/root true}}\n            {:key         \"B\"\n             :description {::di/kind :env\n                           ::di/root true}}]\n           (di/inspect {:a \"A\" :b \"B\"}))))", :nextjournal/render-opts {:loc {:line 307, :end-line 314, :column 1, :end-column 43}, :id "darkleaf.di.tutorial.x-inspect-test/map-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.tutorial.x_inspect_test$map_test 0x5657f300 \"darkleaf.di.tutorial.x_inspect_test$map_test@5657f300\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/map-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.tutorial.x-inspect-test/map-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/notebook-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-notebook, :hash "5duAFDxE4sCnRX71Wo6zeCpC9C3djE"}}