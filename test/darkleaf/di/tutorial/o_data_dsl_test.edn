{:path [], :nextjournal/value {:package :directory, :toc {:path [], :nextjournal/value [{:title "Data DSL", :emoji nil, :path "#data-dsl", :items []}], :nextjournal/render-opts {:toc-visibility false, :set-hash? true}, :nextjournal/viewer {:name nextjournal.clerk.viewer/toc-viewer, :render-fn #viewer-fn nextjournal.clerk.render.navbar/render-items, :hash "5dtesrAmYqLZQQHSMEfFTNpmLtY4nC"}}, :sidenotes? false, :toc-visibility false, :atom-var-name->state #viewer-eval (nextjournal.clerk.render/intern-atoms! {}), :ns #viewer-eval (ns darkleaf.di.tutorial.o-data-dsl-test), :file "test/darkleaf/di/tutorial/o_data_dsl_test.clj", :scope darkleaf.di.tutorial.o-data-dsl-test, :header {:path [], :nextjournal/value [:div.viewer.w-full.max-w-prose.px-8.not-prose.mt-3 [:div.mb-8.text-xs.sans-serif.text-slate-400 nil [:<> [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "./../../../../../"} "Index"] [:span.mx-2 "â€¢"]] [:span "Generated with " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://clerk.vision"} "Clerk"] [:<> " from " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href nil} "test/darkleaf/di/tutorial/o_data_dsl_test.clj" nil]]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}, :open-graph {:type "article:clerk", :title "Data DSL", :description "It is often to use data-DSLs in Clojure, such as reitit routing, and DI offers tools to handle them easily. Here they are: di/template and di/ref."}, :title "Data DSL", :blocks [{:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "user/markdown-5dtZH914kxsSabaFNUgrSZzKhHKLyj"} ["h1" {:id "data-dsl"} [:<> "Data DSL"]]], :nextjournal/render-opts {:id "user/markdown-5dtZH914kxsSabaFNUgrSZzKhHKLyj"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "darkleaf.di.tutorial.o-data-dsl-test/markdown-5dtfQL8szJYBfhoTrUT5ad6tUjwdj4"} [:p [:<> "It is often to use data-DSLs in Clojure, such as reitit routing,"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "and DI offers tools to handle them easily."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "Here they are: "] [:code [:<> "di/template"]] [:<> " and "] [:code [:<> "di/ref"]] [:<> "."]] [:p [:<> "You can also use "] [:code [:<> "di/opt-ref"]] [:<> " for optional dependencies."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "If there is no defined key opt-ref resolves to nil."]]], :nextjournal/render-opts {:id "darkleaf.di.tutorial.o-data-dsl-test/markdown-5dtfQL8szJYBfhoTrUT5ad6tUjwdj4"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def route-data\n  (di/template\n   [[\"/\"     {:get {:handler (di/ref `root-handler)}}]\n    [\"/news\" {:get {:handler (di/ref `news-handler)}}]]))", :nextjournal/render-opts {:loc {:line 17, :end-line 20, :column 1, :end-column 58}, :id "darkleaf.di.tutorial.o-data-dsl-test/route-data-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest template-test\n  (letfn [(root-handler [req])\n          (news-handler [req])]\n    (with-open [root (di/start `route-data {`root-handler root-handler\n                                            `news-handler news-handler})]\n      (t/is (= [[\"/\"     {:get {:handler root-handler}}]\n                [\"/news\" {:get {:handler news-handler}}]]\n               @root)))))", :nextjournal/render-opts {:loc {:line 22, :end-line 29, :column 1, :end-column 26}, :id "darkleaf.di.tutorial.o-data-dsl-test/template-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/notebook-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-notebook, :hash "5duAFDxE4sCnRX71Wo6zeCpC9C3djE"}}