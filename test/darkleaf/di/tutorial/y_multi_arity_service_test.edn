{:path [], :nextjournal/value {:package :directory, :toc {:path [], :nextjournal/value [{:title "Multi arity service", :emoji nil, :path "#multi-arity-service", :items []}], :nextjournal/render-opts {:toc-visibility false, :set-hash? true}, :nextjournal/viewer {:name nextjournal.clerk.viewer/toc-viewer, :render-fn #viewer-fn nextjournal.clerk.render.navbar/render-items, :hash "5dtesrAmYqLZQQHSMEfFTNpmLtY4nC"}}, :sidenotes? false, :toc-visibility false, :atom-var-name->state #viewer-eval (nextjournal.clerk.render/intern-atoms! {}), :ns #viewer-eval (ns darkleaf.di.tutorial.y-multi-arity-service-test), :file "test/darkleaf/di/tutorial/y_multi_arity_service_test.clj", :scope darkleaf.di.tutorial.y-multi-arity-service-test, :header {:path [], :nextjournal/value [:div.viewer.w-full.max-w-prose.px-8.not-prose.mt-3 [:div.mb-8.text-xs.sans-serif.text-slate-400 nil [:<> [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "./../../../../../"} "Index"] [:span.mx-2 "â€¢"]] [:span "Generated with " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://clerk.vision"} "Clerk"] [:<> " from " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href nil} "test/darkleaf/di/tutorial/y_multi_arity_service_test.clj" nil]]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}, :open-graph {:type "article:clerk", :title "Multi arity service", :description "DI collects dependencies from all arities and only then resolves dependencies."}, :title "Multi arity service", :blocks [{:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "user/markdown-5dt4mh7fbmthn1oULnG2xYBogE7Kuk"} ["h1" {:id "multi-arity-service"} [:<> "Multi arity service"]]], :nextjournal/render-opts {:id "user/markdown-5dt4mh7fbmthn1oULnG2xYBogE7Kuk"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "darkleaf.di.tutorial.y-multi-arity-service-test/markdown-5drWzsEZvTKzSBKonR3is6ZnGA1pkq"} [:p [:<> "DI collects dependencies from all arities and only then resolves dependencies."]]], :nextjournal/render-opts {:id "darkleaf.di.tutorial.y-multi-arity-service-test/markdown-5drWzsEZvTKzSBKonR3is6ZnGA1pkq"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn multi-arity-service\n  ([{a `a, :as deps}]\n   (multi-arity-service deps :a1))\n  ([{b `b, :as deps} arg]\n   (multi-arity-service deps arg :a2))\n  ([deps arg1 arg2]\n   [::result deps arg1 arg2]))", :nextjournal/render-opts {:loc {:line 12, :end-line 18, :column 1, :end-column 31}, :id "darkleaf.di.tutorial.y-multi-arity-service-test/multi-arity-service-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest multi-arity-service-test\n  (with-open [s (di/start `multi-arity-service {`a :a, `b :b})]\n    ;; each arity gets all the dependencies\n    (t/is (= [::result {`a :a, `b :b} :a1   :a2]   (s)))\n    (t/is (= [::result {`a :a, `b :b} :arg1 :a2]   (s :arg1)))\n    (t/is (= [::result {`a :a, `b :b} :arg1 :arg2] (s :arg1 :arg2)))))", :nextjournal/render-opts {:loc {:line 20, :end-line 25, :column 1, :end-column 71}, :id "darkleaf.di.tutorial.y-multi-arity-service-test/multi-arity-service-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/notebook-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-notebook, :hash "5duAFDxE4sCnRX71Wo6zeCpC9C3djE"}}