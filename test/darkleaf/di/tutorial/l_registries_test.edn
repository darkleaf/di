{:path [], :nextjournal/value {:package :directory, :toc {:path [], :nextjournal/value [{:title "Registries", :emoji nil, :path "#registries", :items []}], :nextjournal/render-opts {:toc-visibility false, :set-hash? true}, :nextjournal/viewer {:name nextjournal.clerk.viewer/toc-viewer, :render-fn #viewer-fn nextjournal.clerk.render.navbar/render-items, :hash "5dtesrAmYqLZQQHSMEfFTNpmLtY4nC"}}, :sidenotes? false, :toc-visibility false, :atom-var-name->state #viewer-eval (nextjournal.clerk.render/intern-atoms! {}), :ns #viewer-eval (ns darkleaf.di.tutorial.l-registries-test), :file "test/darkleaf/di/tutorial/l_registries_test.clj", :scope darkleaf.di.tutorial.l-registries-test, :header {:path [], :nextjournal/value [:div.viewer.w-full.max-w-prose.px-8.not-prose.mt-3 [:div.mb-8.text-xs.sans-serif.text-slate-400 nil [:<> [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "./../../../../../"} "Index"] [:span.mx-2 "â€¢"]] [:span "Generated with " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://clerk.vision"} "Clerk"] [:<> " from " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href nil} "test/darkleaf/di/tutorial/l_registries_test.clj" nil]]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}, :open-graph {:type "article:clerk", :title "Registries", :description "Here we use undefined dependencies."}, :title "Registries", :blocks [{:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "user/markdown-5dsN84oYdkGh9u1uhSfxcTq9pYZWt1"} ["h1" {:id "registries"} [:<> "Registries"]]], :nextjournal/render-opts {:id "user/markdown-5dsN84oYdkGh9u1uhSfxcTq9pYZWt1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "darkleaf.di.tutorial.l-registries-test/markdown-5dtQ8fguASF3atqR9qaTpEUZcxvQPX"} [:p [:<> "Here we use undefined dependencies."]]], :nextjournal/render-opts {:id "darkleaf.di.tutorial.l-registries-test/markdown-5dtQ8fguASF3atqR9qaTpEUZcxvQPX"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn value\n  {::di/kind :component}\n  [{dep-a `dep-a\n    dep-b `dep-b}]\n  [:value dep-a dep-b])", :nextjournal/render-opts {:loc {:line 12, :end-line 16, :column 1, :end-column 24}, :id "darkleaf.di.tutorial.l-registries-test/value-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "darkleaf.di.tutorial.l-registries-test/markdown-5dsdPzytv7Xt22hybC4o13PnQRbVLT"} [:p [:<> "To locally define or redefine a dependency we should use registries."]]], :nextjournal/render-opts {:id "darkleaf.di.tutorial.l-registries-test/markdown-5dsdPzytv7Xt22hybC4o13PnQRbVLT"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest map-registry\n  (with-open [root (di/start `value {`dep-a :a `dep-b :b})]\n    (t/is (= [:value :a :b] @root)))\n\n  (with-open [root (di/start `value {`value :replacement})]\n    (t/is (= :replacement @root)))\n\n  (with-open [root (di/start `value {`dep-a :a} {`dep-b :b})]\n    (t/is (= [:value :a :b] @root)))\n\n  ;; last wins\n  (with-open [root (di/start `value\n                             {`dep-a :a `dep-b :b}\n                             {`dep-a :a' `dep-b :b'})]\n    (t/is (= [:value :a' :b'] @root))))", :nextjournal/render-opts {:loc {:line 20, :end-line 34, :column 1, :end-column 40}, :id "darkleaf.di.tutorial.l-registries-test/map-registry-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "darkleaf.di.tutorial.l-registries-test/markdown-5du8tC3ZRrdnNccAvcvkufhSGjUm9m"} [:p [:<> "To avoid using "] [:code [:<> "(apply di/start ...)"]] [:<> ","] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "we can use an seqable value as a single registry."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "See "] [:code [:<> "clojure.core/seqable?"]] [:<> "."]]], :nextjournal/render-opts {:id "darkleaf.di.tutorial.l-registries-test/markdown-5du8tC3ZRrdnNccAvcvkufhSGjUm9m"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest seqable-registry\n  (with-open [root (di/start `value [{`dep-a :a}\n                                     [{`dep-b :b}]])]\n    (t/is (= [:value :a :b] @root))))", :nextjournal/render-opts {:loc {:line 40, :end-line 43, :column 1, :end-column 38}, :id "darkleaf.di.tutorial.l-registries-test/seqable-registry-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/notebook-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-notebook, :hash "5duAFDxE4sCnRX71Wo6zeCpC9C3djE"}}