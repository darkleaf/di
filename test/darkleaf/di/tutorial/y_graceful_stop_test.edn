{:path [], :nextjournal/value {:package :directory, :toc {:path [], :nextjournal/value [{:title "Graceful stop", :emoji nil, :path "#graceful-stop", :items []}], :nextjournal/render-opts {:toc-visibility false, :set-hash? true}, :nextjournal/viewer {:name nextjournal.clerk.viewer/toc-viewer, :render-fn #viewer-fn nextjournal.clerk.render.navbar/render-items, :hash "5dtesrAmYqLZQQHSMEfFTNpmLtY4nC"}}, :sidenotes? false, :toc-visibility false, :atom-var-name->state #viewer-eval (nextjournal.clerk.render/intern-atoms! {}), :ns #viewer-eval (ns darkleaf.di.tutorial.y-graceful-stop-test), :file "test/darkleaf/di/tutorial/y_graceful_stop_test.clj", :scope darkleaf.di.tutorial.y-graceful-stop-test, :header {:path [], :nextjournal/value [:div.viewer.w-full.max-w-prose.px-8.not-prose.mt-3 [:div.mb-8.text-xs.sans-serif.text-slate-400 nil [:<> [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "./../../../../../"} "Index"] [:span.mx-2 "â€¢"]] [:span "Generated with " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://clerk.vision"} "Clerk"] [:<> " from " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href nil} "test/darkleaf/di/tutorial/y_graceful_stop_test.clj" nil]]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}, :open-graph {:type "article:clerk", :title "Graceful stop", :description "The DI tries to stop components that are already started if another component fails while it is starting."}, :title "Graceful stop", :blocks [{:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "user/markdown-5dsssofEzuShs5vgUofDfFuRm2gsRX"} ["h1" {:id "graceful-stop"} [:<> "Graceful stop"]]], :nextjournal/render-opts {:id "user/markdown-5dsssofEzuShs5vgUofDfFuRm2gsRX"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "darkleaf.di.tutorial.y-graceful-stop-test/markdown-5dtV3eTjLhQPMKwTpE9ogHMvJaGjYP"} [:p [:<> "The DI tries to stop components that are already started"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "if another component fails while it is starting."]] [:p [:<> "It throws with original exception."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "All other possible exceptions are added as suppressed."]]], :nextjournal/render-opts {:id "darkleaf.di.tutorial.y-graceful-stop-test/markdown-5dtV3eTjLhQPMKwTpE9ogHMvJaGjYP"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn root\n  {::di/kind :component}\n  [{dep              `dep\n    on-start-root-ex ::on-start-root-ex}]\n  (throw on-start-root-ex))", :nextjournal/render-opts {:loc {:line 17, :end-line 21, :column 1, :end-column 28}, :id "darkleaf.di.tutorial.y-graceful-stop-test/root-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn dep\n  {::di/stop (fn [on-stop-dep-ex] (throw on-stop-dep-ex))}\n  [{on-stop-dep-ex ::on-stop-dep-ex}]\n  on-stop-dep-ex)", :nextjournal/render-opts {:loc {:line 23, :end-line 26, :column 1, :end-column 18}, :id "darkleaf.di.tutorial.y-graceful-stop-test/dep-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest graceful-start-test\n  (let [on-start-root-ex (ex-info \"on start root\" {})\n        on-stop-dep-ex   (ex-info \"on stop dep\" {})\n        registry         {::on-start-root-ex on-start-root-ex\n                          ::on-stop-dep-ex   on-stop-dep-ex}\n        ex               (-> (di/start `root registry)\n                             catch-some)]\n    (t/is (= ::di/build-failure (-> ex ex-data :type)))\n    (t/is (= [`root]            (-> ex ex-data :stack)))\n    (t/is (= on-start-root-ex   (-> ex ex-cause)))\n    (t/is (= [on-stop-dep-ex]   (-> ex .getSuppressed seq)))))", :nextjournal/render-opts {:loc {:line 29, :end-line 39, :column 1, :end-column 63}, :id "darkleaf.di.tutorial.y-graceful-stop-test/graceful-start-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/notebook-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-notebook, :hash "5duAFDxE4sCnRX71Wo6zeCpC9C3djE"}}