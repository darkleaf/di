{:path [], :nextjournal/value {:package :directory, :toc {:path [], :nextjournal/value [], :nextjournal/render-opts {:toc-visibility false, :set-hash? true}, :nextjournal/viewer {:name nextjournal.clerk.viewer/toc-viewer, :render-fn #viewer-fn nextjournal.clerk.render.navbar/render-items, :hash "5dtesrAmYqLZQQHSMEfFTNpmLtY4nC"}}, :sidenotes? false, :toc-visibility false, :atom-var-name->state #viewer-eval (nextjournal.clerk.render/intern-atoms! {}), :ns #viewer-eval (ns darkleaf.di.root-test), :file "test/darkleaf/di/root_test.clj", :scope darkleaf.di.root-test, :header {:path [], :nextjournal/value [:div.viewer.w-full.max-w-prose.px-8.not-prose.mt-3 [:div.mb-8.text-xs.sans-serif.text-slate-400 nil [:<> [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "./../../../../"} "Index"] [:span.mx-2 "â€¢"]] [:span "Generated with " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://clerk.vision"} "Clerk"] [:<> " from " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href nil} "test/darkleaf/di/root_test.clj" nil]]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}, :open-graph {:type "article:clerk", :title nil, :description nil}, :blocks [{:path [], :nextjournal/value [{:path [0], :nextjournal/value "(ns darkleaf.di.root-test\n  (:require\n   [clojure.test :as t]\n   [darkleaf.di.core :as di]\n   [darkleaf.di.protocols :as p]))", :nextjournal/render-opts {:loc {:line 1, :end-line 5, :column 1, :end-column 35}, :id "darkleaf.di.root-test/anon-expr-5dtxge7Zv2bcpmrZ1KXmPRViVNwRBW-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(set! *warn-on-reflection* true)", :nextjournal/render-opts {:loc {:line 7, :end-line 7, :column 1, :end-column 33}, :id "darkleaf.di.root-test/anon-expr-5dst5rqPjd8gcjnK4zTbJr8eGoTKZJ-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value true, :nextjournal/viewer {:name nextjournal.clerk.viewer/boolean-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-bool.inspected-value (str x)]), :hash "5drYZi1ixy8HcW8uKJ6GoMNhasTEGB"}, :nextjournal/render-opts {:id "darkleaf.di.root-test/anon-expr-5dst5rqPjd8gcjnK4zTbJr8eGoTKZJ-result-1"}}, :nextjournal/blob-id "5dsYsRrJYh9oynTArcokE7APxQuZNJ"}, :nextjournal/render-opts {:id "darkleaf.di.root-test/anon-expr-5dst5rqPjd8gcjnK4zTbJr8eGoTKZJ-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn stoppable\n  {::di/stop (fn [*stopped?] (reset! *stopped? true))}\n  [{*stopped? ::*stopped?}]\n  *stopped?)", :nextjournal/render-opts {:loc {:line 9, :end-line 12, :column 1, :end-column 13}, :id "darkleaf.di.root-test/stoppable-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.root_test$stoppable 0x3d574310 \"darkleaf.di.root_test$stoppable@3d574310\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.root-test/stoppable-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.root-test/stoppable-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest auto-closeable-test\n  (let [*stopped? (atom false)]\n    (with-open [root (di/start `stoppable {::*stopped? *stopped?})])\n    (t/is @*stopped?)))", :nextjournal/render-opts {:loc {:line 14, :end-line 17, :column 1, :end-column 24}, :id "darkleaf.di.root-test/auto-closeable-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.root_test$auto_closeable_test 0x1496fc38 \"darkleaf.di.root_test$auto_closeable_test@1496fc38\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.root-test/auto-closeable-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.root-test/auto-closeable-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest stoppable-test\n  (let [*stopped? (atom false)]\n    (di/stop (di/start `stoppable {::*stopped? *stopped?}))\n    (t/is @*stopped?)))", :nextjournal/render-opts {:loc {:line 19, :end-line 22, :column 1, :end-column 24}, :id "darkleaf.di.root-test/stoppable-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.root_test$stoppable_test 0x4a02814e \"darkleaf.di.root_test$stoppable_test@4a02814e\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.root-test/stoppable-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.root-test/stoppable-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest ideref-test\n  (with-open [root (di/start ::root {::root 42})]\n    (t/is (= 42 @root))))", :nextjournal/render-opts {:loc {:line 24, :end-line 26, :column 1, :end-column 26}, :id "darkleaf.di.root-test/ideref-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.root_test$ideref_test 0x7efc8091 \"darkleaf.di.root_test$ideref_test@7efc8091\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.root-test/ideref-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.root-test/ideref-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest ifn-test\n  (with-open [root (di/start\n                    ::root\n                    {::root (fn\n                              ([] 0)\n                              ([a1] 1)\n                              ([a1 a2] 2)\n                              ([a1 a2 a3] 3)\n                              ([a1 a2 a3 a4] 4)\n                              ([a1 a2 a3 a4 a5] 5)\n                              ([a1 a2 a3 a4 a5 a6] 6)\n                              ([a1 a2 a3 a4 a5 a6 a7] 7)\n                              ([a1 a2 a3 a4 a5 a6 a7 a8] 8)\n                              ([a1 a2 a3 a4 a5 a6 a7 a8 a9] 9)\n                              ([a1 a2 a3 a4 a5 a6 a7 a8 a9 a10] 10)\n                              ([a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11] 11)\n                              ([a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12] 12)\n                              ([a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13] 13)\n                              ([a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14] 14)\n                              ([a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15] 15)\n                              ([a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16] 16)\n                              ([a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17] 17)\n                              ([a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18] 18)\n                              ([a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19] 19)\n                              ([a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20] 20)\n                              ([a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 & args] 21))})]\n    (t/is (= 0   (.call ^java.util.concurrent.Callable root)))\n    (t/is (= nil (.run  ^java.lang.Runnable            root)))\n    (t/is (= 0   (root)))\n    (t/is (= 1   (root 1)))\n    (t/is (= 2   (root 1 2)))\n    (t/is (= 3   (root 1 2 3)))\n    (t/is (= 4   (root 1 2 3 4)))\n    (t/is (= 5   (root 1 2 3 4 5)))\n    (t/is (= 6   (root 1 2 3 4 5 6)))\n    (t/is (= 7   (root 1 2 3 4 5 6 7)))\n    (t/is (= 8   (root 1 2 3 4 5 6 7 8)))\n    (t/is (= 9   (root 1 2 3 4 5 6 7 8 9)))\n    (t/is (= 10  (root 1 2 3 4 5 6 7 8 9 10)))\n    (t/is (= 11  (root 1 2 3 4 5 6 7 8 9 10 11)))\n    (t/is (= 12  (root 1 2 3 4 5 6 7 8 9 10 11 12)))\n    (t/is (= 13  (root 1 2 3 4 5 6 7 8 9 10 11 12 13)))\n    (t/is (= 14  (root 1 2 3 4 5 6 7 8 9 10 11 12 13 14)))\n    (t/is (= 15  (root 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15)))\n    (t/is (= 16  (root 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16)))\n    (t/is (= 17  (root 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17)))\n    (t/is (= 18  (root 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18)))\n    (t/is (= 19  (root 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19)))\n    (t/is (= 20  (root 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)))\n    (t/is (= 21  (root 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21)))\n    (t/is (= 2   (apply root 1 [2])))))", :nextjournal/render-opts {:loc {:line 28, :end-line 78, :column 1, :end-column 40}, :id "darkleaf.di.root-test/ifn-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.root_test$ifn_test 0x7934139d \"darkleaf.di.root_test$ifn_test@7934139d\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.root-test/ifn-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.root-test/ifn-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(t/deftest pr-test\n  (t/is (= \"#darkleaf.di.core/root 42\"\n           (pr-str (di/start ::root {::root 42})))))", :nextjournal/render-opts {:loc {:line 80, :end-line 82, :column 1, :end-column 53}, :id "darkleaf.di.root-test/pr-test-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[darkleaf.di.root_test$pr_test 0x5a6057bf \"darkleaf.di.root_test$pr_test@5a6057bf\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "darkleaf.di.root-test/pr-test-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "darkleaf.di.root-test/pr-test-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/notebook-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-notebook, :hash "5duAFDxE4sCnRX71Wo6zeCpC9C3djE"}}